{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\manage-it\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contatcReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACTS, CLEAR_FILTER, UPDATE_CONTACT } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Akins Jude',\n      email: 'jude@gmail.com',\n      phone: '111 111 1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Mpho Ndebele',\n      email: 'mpho@yahoo.com',\n      phone: '222 222 2222',\n      type: 'professional'\n    }, {\n      id: 3,\n      name: 'Smart Adegoke',\n      email: 'adegoke@gmail.com',\n      phone: '333 333 3333',\n      type: 'business'\n    }],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add Contacts\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => dispatch({\n    type: CLEAR_FILTER\n  });\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["C:/Users/Amos/Desktop/manage-it/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuidv4","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","UPDATE_CONTACT","ContactState","props","initialState","contacts","id","name","email","phone","type","current","filtered","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contatcReducer';\r\nimport {\r\n    ADD_CONTACT,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    UPDATE_CONTACT\r\n} from '../types';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: [\r\n            {\r\n                id: 1,\r\n                name: 'Akins Jude',\r\n                email: 'jude@gmail.com',\r\n                phone: '111 111 1111',\r\n                type: 'personal'\r\n            },\r\n            {\r\n                id: 2,\r\n                name: 'Mpho Ndebele',\r\n                email: 'mpho@yahoo.com',\r\n                phone: '222 222 2222',\r\n                type: 'professional'\r\n            },\r\n            {\r\n                id: 3,\r\n                name: 'Smart Adegoke',\r\n                email: 'adegoke@gmail.com',\r\n                phone: '333 333 3333',\r\n                type: 'business'\r\n            },\r\n        ],\r\n        current: null,\r\n        filtered: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    // Add Contacts\r\n    const addContact = contact => {\r\n        contact.id = uuidv4();\r\n        dispatch({\r\n            type: ADD_CONTACT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Delete Contact\r\n    const deleteContact = id => {\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    // Set Current\r\n    const setCurrent = contact => {\r\n        dispatch({\r\n            type: SET_CURRENT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Clear Current\r\n    const clearCurrent = () => {\r\n        dispatch({\r\n            type: CLEAR_CURRENT\r\n        });\r\n    }\r\n    // Update Contact\r\n    const updateContact = contact => {\r\n        dispatch({\r\n            type: UPDATE_CONTACT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Filter Contact\r\n    const filterContacts = text => {\r\n        dispatch({\r\n            type: FILTER_CONTACTS,\r\n            payload: text\r\n        });\r\n    }\r\n\r\n    // Clear Filter\r\n    const clearFilter = () => dispatch({ type: CLEAR_FILTER });\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                filtered: state.filtered,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContacts,\r\n                clearFilter\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}
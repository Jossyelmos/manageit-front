{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\manage-it\\\\client\\\\src\\\\context\\\\auth\\\\AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); // Load User\n  // Register User\n\n  const register = async FormData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', FormData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  }; // Login User\n  // Logout\n  // Clear Errors\n\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      user: state.user,\n      loading: state.loading,\n      error: state.error\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"UrEkDPQH5U12xnblC9PjDJeyoVE=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/Amos/Desktop/manage-it/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","user","error","state","dispatch","register","FormData","config","headers","res","post","type","payload","data","err","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,YARJ,QASO,UATP;;;AAWA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,eAAe,EAAE,IAFA;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,IAAI,EAAE,IAJW;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;AAQA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBvB,UAAU,CAACG,WAAD,EAAcW,YAAd,CAAnC,CATuB,CAWvB;AAEA;;AACA,QAAMU,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AAC/B,UAAMC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAMA,QAAI;AACA,YAAMC,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAW,YAAX,EAAyBJ,QAAzB,EAAmCC,MAAnC,CAAlB;AAEAH,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAE1B,gBADD;AAEL2B,QAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,GAAP,EAAY;AACVV,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAEzB;AAAR,OAAD,CAAR;AACH;AACJ,GAjBD,CAduB,CAiCvB;AAEA;AAEA;;;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAI;AACLU,MAAAA,KAAK,EAAEO,KAAK,CAACP,KADR;AAELG,MAAAA,eAAe,EAAEI,KAAK,CAACJ,eAFlB;AAGLE,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAHP;AAILD,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAJV;AAKLE,MAAAA,KAAK,EAAEC,KAAK,CAACD;AALR,KADb;AAAA,cASKR,KAAK,CAACqB;AATX;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApDD;;GAAMtB,S;;KAAAA,S;AAsDN,eAAeA,SAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_ERRORS\r\n} from '../types';\r\n\r\nconst AuthState = props => {\r\n    const initialState = {\r\n        token: localStorage.getItem('token'),\r\n        isAuthenticated: null,\r\n        loading: true,\r\n        user: null,\r\n        error: null\r\n    }\r\n\r\n    const [state,dispatch] = useReducer(authReducer, initialState);\r\n\r\n    // Load User\r\n\r\n    // Register User\r\n    const register = async FormData => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/users', FormData, config);\r\n\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({ type: REGISTER_FAIL });\r\n        }\r\n    }\r\n\r\n    // Login User\r\n\r\n    // Logout\r\n\r\n    // Clear Errors\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value = {{\r\n                token: state.token,\r\n                isAuthenticated: state.isAuthenticated,\r\n                user: state.user,\r\n                loading: state.loading,\r\n                error: state.error\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n};\r\n\r\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}
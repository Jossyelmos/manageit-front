{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\manage-it\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport contactReducer from './contatcReducer';\nimport { GET_CONTACTS, ADD_CONTACT, CLEAR_CONTACTS, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACTS, CLEAR_FILTER, UPDATE_CONTACT, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: null,\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Add Contacts\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Set Current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.msg\n      });\n    }\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => dispatch({\n    type: CLEAR_FILTER\n  }); // Clear Contacts\n\n\n  const clearContacts = () => dispatch({\n    type: CLEAR_CONTACTS\n  });\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      getContacts,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter,\n      clearContacts\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["C:/Users/Amos/Desktop/manage-it/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","CLEAR_CONTACTS","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","UPDATE_CONTACT","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","getContacts","res","get","type","payload","data","err","response","msg","addContact","contact","config","headers","post","deleteContact","id","delete","setCurrent","clearCurrent","updateContact","put","_id","filterContacts","text","clearFilter","clearContacts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contatcReducer';\r\nimport {\r\n    GET_CONTACTS,\r\n    ADD_CONTACT,\r\n    CLEAR_CONTACTS,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    UPDATE_CONTACT,\r\n    CONTACT_ERROR\r\n} from '../types';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: null,\r\n        current: null,\r\n        filtered: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    // Get Contacts\r\n    const getContacts = async () => {\r\n        try {\r\n            const res = await axios.get('/api/contacts');\r\n\r\n            dispatch({\r\n                type: GET_CONTACTS,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    };\r\n    // Add Contacts\r\n    const addContact = async contact => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/contacts', contact, config);\r\n\r\n            dispatch({\r\n                type: ADD_CONTACT,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Delete Contact\r\n    const deleteContact = async id => {\r\n        try {\r\n            await axios.delete(`/api/contacts/${id}`);\r\n\r\n            dispatch({\r\n                type: DELETE_CONTACT,\r\n                payload: id\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Set Current\r\n    const setCurrent = contact => {\r\n        dispatch({\r\n            type: SET_CURRENT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Clear Current\r\n    const clearCurrent = () => {\r\n        dispatch({\r\n            type: CLEAR_CURRENT\r\n        });\r\n    }\r\n    // Update Contact\r\n    const updateContact = async contact => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\r\n            dispatch({\r\n                type: UPDATE_CONTACT,\r\n                payload: res.data\r\n            });\r\n        } catch (err) {  \r\n            dispatch({\r\n                type: CONTACT_ERROR,\r\n                payload: err.response.msg\r\n            });\r\n        }\r\n    }\r\n\r\n    // Filter Contact\r\n    const filterContacts = text => {\r\n        dispatch({\r\n            type: FILTER_CONTACTS,\r\n            payload: text\r\n        });\r\n    }\r\n\r\n    // Clear Filter\r\n    const clearFilter = () => dispatch({ type: CLEAR_FILTER });\r\n\r\n    // Clear Contacts\r\n    const clearContacts = () => dispatch({ type: CLEAR_CONTACTS });\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                filtered: state.filtered,\r\n                getContacts,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContacts,\r\n                clearFilter,\r\n                clearContacts\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}
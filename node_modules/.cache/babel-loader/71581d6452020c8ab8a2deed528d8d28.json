{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\manage-it\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts\n  } = contactContext;\n  useEffect(() => {\n    getContacts(contacts);\n  }, []);\n\n  if (contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add contact...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contacts, \"TDwhgIW1z1K2LcG8WJHCH34hzH8=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/Amos/Desktop/manage-it/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","getContacts","length","map","contact","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,cAAc,GAAGP,UAAU,CAACK,cAAD,CAAjC;AAEA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA;AAAtB,MAAsCH,cAA5C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW,CAACF,QAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIA,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACvB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,eAAD;AAAA,gBACKF,QAAQ,KAAK,IAAb,GAAoBA,QAAQ,CAACG,GAAT,CAAaC,OAAO,iBACrC,QAAC,aAAD;AAAgC,QAAA,OAAO,EAAE,GAAzC;AAA8C,QAAA,UAAU,EAAC,MAAzD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAoBA,OAAO,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADiB,CAApB,GAKCN,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBAClB,QAAC,aAAD;AAAgC,QAAA,OAAO,EAAE,GAAzC;AAA8C,QAAA,UAAU,EAAC,MAAzD;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAoBA,OAAO,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AANN;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA7BD;;GAAMR,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport ContactItem from './ContactItem';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst Contacts = () => {\r\n    const contactContext = useContext(ContactContext);\r\n\r\n    const { contacts, filtered, getContacts } = contactContext;\r\n\r\n    useEffect(() => {\r\n        getContacts(contacts);\r\n    }, []);\r\n\r\n    if (contacts.length === 0) {\r\n        return <h4>Please add contact...</h4>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <TransitionGroup>\r\n                {filtered !== null ? filtered.map(contact => (\r\n                    <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\r\n                        <ContactItem contact={contact} />\r\n                    </CSSTransition>\r\n                )) \r\n                : contacts.map(contact => (\r\n                    <CSSTransition key={contact.id} timeout={500} classNames=\"item\">\r\n                        <ContactItem contact={contact}/>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}
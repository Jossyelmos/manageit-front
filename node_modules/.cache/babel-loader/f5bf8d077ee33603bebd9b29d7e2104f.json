{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\manage-it\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contatcReducer';\nimport { GET_CONTACTS, ADD_CONTACT, CLEAR_CONTACTS, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, FILTER_CONTACTS, CLEAR_FILTER, UPDATE_CONTACT, CONTACT_ERROR } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Get Contacts\n\n  const getContacts = async contact => {}; // Add Contacts\n\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // Update Contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // Filter Contact\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // Clear Filter\n\n\n  const clearFilter = () => dispatch({\n    type: CLEAR_FILTER\n  });\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["C:/Users/Amos/Desktop/manage-it/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuidv4","ContactContext","contactReducer","GET_CONTACTS","ADD_CONTACT","CLEAR_CONTACTS","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","FILTER_CONTACTS","CLEAR_FILTER","UPDATE_CONTACT","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","state","dispatch","getContacts","contact","addContact","id","type","payload","deleteContact","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACIC,YADJ,EAEIC,WAFJ,EAGIC,cAHJ,EAIIC,cAJJ,EAKIC,WALJ,EAMIC,aANJ,EAOIC,eAPJ,EAQIC,YARJ,EASIC,cATJ,EAUIC,aAVJ,QAWO,UAXP;;;AAaA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,YAAY,GAAG;AACjBC,IAAAA,QAAQ,EAAE,EADO;AAEjBC,IAAAA,OAAO,EAAE,IAFQ;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,UAAU,CAACI,cAAD,EAAiBa,YAAjB,CAApC,CAP0B,CAS1B;;AACA,QAAMM,WAAW,GAAG,MAAOC,OAAP,IAAmB,CAEtC,CAFD,CAV0B,CAa1B;;;AACA,QAAMC,UAAU,GAAGD,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACE,EAAR,GAAaxB,MAAM,EAAnB;AACAoB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAErB,WADD;AAELsB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GAND,CAd0B,CAsB1B;;;AACA,QAAMK,aAAa,GAAGH,EAAE,IAAI;AACxBJ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEnB,cADD;AAELoB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GALD,CAvB0B,CA8B1B;;;AACA,QAAMI,UAAU,GAAGN,OAAO,IAAI;AAC1BF,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAElB,WADD;AAELmB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD,CA/B0B,CAsC1B;;;AACA,QAAMO,YAAY,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH,GAJD,CAvC0B,CA4C1B;;;AACA,QAAMsB,aAAa,GAAGR,OAAO,IAAI;AAC7BF,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEd,cADD;AAELe,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAIH,GALD,CA7C0B,CAoD1B;;;AACA,QAAMS,cAAc,GAAGC,IAAI,IAAI;AAC3BZ,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEhB,eADD;AAELiB,MAAAA,OAAO,EAAEM;AAFJ,KAAD,CAAR;AAIH,GALD,CArD0B,CA4D1B;;;AACA,QAAMC,WAAW,GAAG,MAAMb,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEf;AAAR,GAAD,CAAlC;;AAEA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QADb;AAEHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFZ;AAGHC,MAAAA,QAAQ,EAAEC,KAAK,CAACD,QAHb;AAIHK,MAAAA,UAJG;AAKHI,MAAAA,aALG;AAMHC,MAAAA,UANG;AAOHC,MAAAA,YAPG;AAQHC,MAAAA,aARG;AASHC,MAAAA,cATG;AAUHE,MAAAA;AAVG,KADX;AAAA,cAcKnB,KAAK,CAACoB;AAdX;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAjFD;;GAAMrB,Y;;KAAAA,Y;AAmFN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contatcReducer';\r\nimport {\r\n    GET_CONTACTS,\r\n    ADD_CONTACT,\r\n    CLEAR_CONTACTS,\r\n    DELETE_CONTACT,\r\n    SET_CURRENT,\r\n    CLEAR_CURRENT,\r\n    FILTER_CONTACTS,\r\n    CLEAR_FILTER,\r\n    UPDATE_CONTACT,\r\n    CONTACT_ERROR\r\n} from '../types';\r\n\r\nconst ContactState = props => {\r\n    const initialState = {\r\n        contacts: [],\r\n        current: null,\r\n        filtered: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(contactReducer, initialState);\r\n\r\n    // Get Contacts\r\n    const getContacts = async (contact) => {\r\n\r\n    };\r\n    // Add Contacts\r\n    const addContact = contact => {\r\n        contact.id = uuidv4();\r\n        dispatch({\r\n            type: ADD_CONTACT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Delete Contact\r\n    const deleteContact = id => {\r\n        dispatch({\r\n            type: DELETE_CONTACT,\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    // Set Current\r\n    const setCurrent = contact => {\r\n        dispatch({\r\n            type: SET_CURRENT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Clear Current\r\n    const clearCurrent = () => {\r\n        dispatch({\r\n            type: CLEAR_CURRENT\r\n        });\r\n    }\r\n    // Update Contact\r\n    const updateContact = contact => {\r\n        dispatch({\r\n            type: UPDATE_CONTACT,\r\n            payload: contact\r\n        });\r\n    }\r\n\r\n    // Filter Contact\r\n    const filterContacts = text => {\r\n        dispatch({\r\n            type: FILTER_CONTACTS,\r\n            payload: text\r\n        });\r\n    }\r\n\r\n    // Clear Filter\r\n    const clearFilter = () => dispatch({ type: CLEAR_FILTER });\r\n\r\n    return (\r\n        <ContactContext.Provider\r\n            value={{\r\n                contacts: state.contacts,\r\n                current: state.current,\r\n                filtered: state.filtered,\r\n                addContact,\r\n                deleteContact,\r\n                setCurrent,\r\n                clearCurrent,\r\n                updateContact,\r\n                filterContacts,\r\n                clearFilter\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ContactContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ContactState;"]},"metadata":{},"sourceType":"module"}
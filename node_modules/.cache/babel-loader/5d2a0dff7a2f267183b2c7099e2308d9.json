{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amos\\\\Desktop\\\\manage-it\\\\client\\\\src\\\\components\\\\contacts\\\\Contacts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spinner from '../layout/Spinner';\nimport ContactItem from './ContactItem';\nimport ContactContext from '../../context/contact/contactContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const contactContext = useContext(ContactContext);\n  const {\n    contacts,\n    filtered,\n    getContacts,\n    loading\n  } = contactContext;\n  useEffect(() => {\n    getContacts(contacts); // eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Please add contact...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: contacts !== null && !loading ? /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: filtered !== null ? filtered.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }, this)\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this)) : contacts.map(contact => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        timeout: 500,\n        classNames: \"item\",\n        children: /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }, this)\n      }, contact._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Contacts, \"TDwhgIW1z1K2LcG8WJHCH34hzH8=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/Amos/Desktop/manage-it/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","Spinner","ContactItem","ContactContext","Contacts","contactContext","contacts","filtered","getContacts","loading","length","map","contact","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,cAAc,GAAGR,UAAU,CAACM,cAAD,CAAjC;AAEA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,WAAtB;AAAmCC,IAAAA;AAAnC,MAA+CJ,cAArD;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,CAACF,QAAD,CAAX,CADY,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAA7C,EAAgD;AAC5C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,cACKJ,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,gBACG,QAAC,eAAD;AAAA,gBACKF,QAAQ,KAAK,IAAb,GAAoBA,QAAQ,CAACI,GAAT,CAAaC,OAAO,iBACrC,QAAC,aAAD;AAAiC,QAAA,OAAO,EAAE,GAA1C;AAA+C,QAAA,UAAU,EAAC,MAA1D;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAoBA,OAAO,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA,cADiB,CAApB,GAKCP,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBAClB,QAAC,aAAD;AAAiC,QAAA,OAAO,EAAE,GAA1C;AAA+C,QAAA,UAAU,EAAC,MAA1D;AAAA,+BACI,QAAC,WAAD;AAAa,UAAA,OAAO,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAoBA,OAAO,CAACC,GAA5B;AAAA;AAAA;AAAA;AAAA,cADF;AANN;AAAA;AAAA;AAAA;AAAA,YADH,gBAaG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAdR;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAhCD;;GAAMT,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Spinner from '../layout/Spinner';\r\nimport ContactItem from './ContactItem';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst Contacts = () => {\r\n    const contactContext = useContext(ContactContext);\r\n\r\n    const { contacts, filtered, getContacts, loading } = contactContext;\r\n\r\n    useEffect(() => {\r\n        getContacts(contacts);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (contacts !== null && contacts.length === 0) {\r\n        return <h4>Please add contact...</h4>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {contacts !== null && !loading ? (\r\n                <TransitionGroup>\r\n                    {filtered !== null ? filtered.map(contact => (\r\n                        <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\r\n                            <ContactItem contact={contact} />\r\n                        </CSSTransition>\r\n                    )) \r\n                    : contacts.map(contact => (\r\n                        <CSSTransition key={contact._id} timeout={500} classNames=\"item\">\r\n                            <ContactItem contact={contact}/>\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            ) : <Spinner />}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Contacts;\r\n"]},"metadata":{},"sourceType":"module"}